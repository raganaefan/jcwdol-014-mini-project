// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Sample {
  id        Int      @id @default(autoincrement())
  name      String
  code      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("samples") // if you want to use snake_case format
}

model User {
  id        Int        @id @default(autoincrement())
  firstName String
  lastName  String
  email     String     @unique
  password  String
  role      Role
  referral  String     @unique
  points    Int        @default(0)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  referrals Referral[]
  Events     Event[]
  discountCoupon DiscountCoupon[]
  PointHistory  PointHistory[]
  Transaction Transaction[]


  @@map("users")
}

model Event {
  id          Int      @id @default(autoincrement())
  eventName   String
  description String
  category    String
  location    String
  price       Int
  date        DateTime
  time        String
  imageUrl    String?
  organizer   User     @relation(fields: [organizerId], references: [id])
  organizerId Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  availSeats  Int
  Transaction Transaction[]

  @@map("events")
}

model Referral {
  id         Int      @id @default(autoincrement())
  referredBy Int
  userId     Int      @unique
  User       User     @relation(fields: [userId], references: [id])
  createdAt  DateTime @default(now())
  expiredAt  DateTime

  @@map("referrals")
}

model DiscountCoupon {
  id         Int      @id @default(autoincrement())
  userId     Int
  discount   Float
  expiredAt  DateTime
  createdAt  DateTime @default(now())
  User       User     @relation(fields: [userId], references: [id])
}

model PointHistory {
  id         Int      @id @default(autoincrement())
  userId     Int
  points     Int
  expiredAt  DateTime
  createdAt  DateTime @default(now())
  User       User     @relation(fields: [userId], references: [id])
}

model Transaction {
  id        Int      @id @default(autoincrement())
  eventId   Int
  userId    Int
  amount    Int
  createdAt DateTime @default(now())
  Event     Event    @relation(fields: [eventId], references: [id])
  User      User     @relation(fields: [userId], references: [id])

  @@map("transactions")
}

enum Role {
  CUSTOMER
  ORGANIZER
}
